scope: source.haskell
snippets:
    synonym:
      - trigger: print (synonym)
        snippet: putStrLn ${1:"string" ++ "other"}
      - trigger: function
        snippet: |
          ${1:name'} :: ${2:Int -> Int -> Int}
          ${1} ${3:var1 var2} = ${4:var1 + var2}
      - trigger: lambda
        snippet: "\\val -> ${1: foo val}"

      - trigger: list[i]
        snippet: ${1:list} !! ${2:i}
        desc: index
      - trigger: range
        snippet: "[${1:1}..${2:20}]"
      - trigger: list_comprehension
        snippet: "[${1:val} ++ 1 | ${1} <- ${2:[0..20]} ]"
