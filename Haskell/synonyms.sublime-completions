{
    "scope": "source.haskell",

    "completions": [
        // Library Functions
        {"trigger": "print", "contents": "putStrLn ${1:\"string\"}"},

        // Function Definition
        {"trigger": "function", "contents": "${1:name'} :: ${2:Int -> Int -> Int}\n${1} ${3:var1 var2} = ${4:var1 + var2}"},
        {"trigger": "lambda", "contents": "\\x -> ${1:f x}"},

        // Strings
        {"trigger": "string concat\tconcat", "contents": "++"},
        {"trigger": "string concat\tstring_concat", "contents": "++"},


        //------------------------------------------------
        // Arrays
        {"trigger": "list[i]\tlist_index", "contents": "${1:list} !! ${2:i}"},
        {"trigger": "range(1, 20)\tlist_range", "contents": "[${1:1}..${2:20}]"},
        {"trigger": "list comprehension\tlist_comprehension", "contents": "[${1:x} ++ 1 | ${1} <- ${2:[0..20]} ]"},
    ],
}
